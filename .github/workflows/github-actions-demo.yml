name: Demo Project Build üöÄ
run-name: Demo Project Build Pipeline üöÄ
on:
  push:
    tags:
      - "*.*.*"
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to build and push the image."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      
      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          
      - name: docker registry login
        run: echo '${{ secrets.CNXT_DOCKER_PASSWORD }}' | docker login 'https://${{ secrets.CNXT_DOCKER_ENDPOINT }}' -u '${{ secrets.CNXT_DOCKER_USERNAME }}' --password-stdin
      - name: docker pull connext MI base image
        run: docker pull '${{ secrets.CNXT_DOCKER_ENDPOINT }}'/default/wso2-mi-alpine:1.1.0

      - name: Build car application
        run: cd ./secrets_1.0.0;zip -r ../secrets_1.0.0.car .;cd ..

      - name: Build docker image
        env:
          CNXT_DOCKER_ENDPOINT: ${{ secrets.CNXT_DOCKER_ENDPOINT }}
        run: docker build --build-arg CNXT_DOCKER_ENDPOINT -f ./Docker/Dockerfile . -t '${{ secrets.CNXT_DOCKER_ENDPOINT }}'/default/demo-project:'${{ env.RELEASE_VERSION }}'
      - name: Push the docker custom image
        run: docker push '${{ secrets.CNXT_DOCKER_ENDPOINT }}'/default/demo-project:'${{ env.RELEASE_VERSION }}'
      - run: echo "üçè This job's status is ${{ job.status }}."
      
